# .github/workflows/release.yaml

name: Release
on:
  release:
    types: 
      - created

jobs:
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, windows/386, windows/amd64, darwin/386, darwin/amd64 
        goos: [linux, windows, darwin]
        goarch: ["386", amd64]
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
      - uses: actions/checkout@v2
      - name: Set APP_VERSION env
        run: echo ::set-env name=APP_VERSION::$(echo ${GITHUB_REF} | rev | cut -d'/' -f 1 | rev )
      - name: Set BUILD_TIME env
        run: echo ::set-env name=BUILD_TIME::$(date)
      - name: Environment Printer
        uses: managedkaos/print-env@v1.0
      - name: builds the binary
        run: sh ./git-build.sh
        env:
          GO111MODULE: on
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.GOARCH }}
          VERSION: ${{ env.APP_VERSION }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # CGO_ENABLED: 1
  # release:
  #     name: release
  #     runs-on: ubuntu-latest
  #     strategy:
  #       matrix:
  #         goos: [linux, windows, darwin]
  #         goarch: ["386", amd64]
  #     steps:
  #     - name: Pre Install
  #       run: |
  #         sudo apt-get install build-essential gcc
  #     - name: Set up Go 1.x
  #       uses: actions/setup-go@v2
  #     - uses: actions/checkout@master
  #     - name: compile and release
  #       uses: ngs/go-release.action@v1.0.1
  #       env:
  #         GO111MODULE: on
  #         CGO_ENABLED: 1
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         GOARCH: ${{ matrix.goarch }}
  #         GOOS: ${{ matrix.goos }}
  # release-linux-amd64:
  #   name: release linux/amd64
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       goos: [linux]
  #       goarch: [amd64]
  #   steps:
  #   - name: Pre Install
  #     run: |
  #       sudo apt-get install build-essential gcc
  #   - name: Set up Go 1.x
  #     uses: actions/setup-go@v2
  #   - uses: actions/checkout@master
  #   - name: compile and release
  #     uses: ngs/go-release.action@v1.0.1
  #     env:
  #       GO111MODULE: on
  #       CGO_ENABLED: 1
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       GOARCH: amd64
  #       GOOS: linux
  # release-darwin-386:
  #   name: release darwin/386
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       goos: [darwin]
  #       goarch: ["386"]
  #   steps:
  #   - name: Pre Install
  #     run: |
  #       sudo apt-get install -y build-essential gcc
  #   - name: Set up Go 1.x
  #     uses: actions/setup-go@v2
  #   - uses: actions/checkout@master
  #   - name: compile and release
  #     uses: ngs/go-release.action@v1.0.1
  #     env:
  #       GO111MODULE: on
  #       CGO_ENABLED: 1
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       GOARCH: "386"
  #       GOOS: darwin
  # release-darwin-amd64:
  #   name: release darwin/amd64
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       goos: [darwin]
  #       goarch: [amd64]
  #   steps:
  #   - name: Pre Install
  #     run: |
  #       sudo apt-get install -y build-essential gcc
  #   - name: Set up Go 1.x
  #     uses: actions/setup-go@v2
  #   - uses: actions/checkout@master
  #   - name: compile and release
  #     uses: ngs/go-release.action@v1.0.1
  #     env:
  #       GO111MODULE: on
  #       CGO_ENABLED: 1
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       GOARCH: amd64
  #       GOOS: darwin
  # release-windows-386:
  #   name: release windows/386
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       goos: [windows]
  #       goarch: ["386"]
  #   steps:
  #   - name: Pre Install
  #     run: |
  #       sudo apt-get install -y build-essential gcc
  #   - name: Set up Go 1.x
  #     uses: actions/setup-go@v2
  #   - uses: actions/checkout@master
  #   - name: compile and release
  #     uses: ngs/go-release.action@v1.0.1
  #     env:
  #       GO111MODULE: on
  #       CGO_ENABLED: 1
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       GOARCH: "386"
  #       GOOS: windows
  # release-windows-amd64:
  #   name: release windows/amd64
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       goos: [windows]
  #       goarch: [amd64]
  #   steps:
  #   - name: Pre Install
  #     run: |
  #       sudo apt-get install -y build-essential gcc
  #   - name: Set up Go 1.x
  #     uses: actions/setup-go@v2
  #   - uses: actions/checkout@master
  #   - name: compile and release
  #     uses: ngs/go-release.action@v1.0.1
  #     env:
  #       GO111MODULE: on
  #       CGO_ENABLED: 1
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       GOARCH: amd64
  #       GOOS: windows